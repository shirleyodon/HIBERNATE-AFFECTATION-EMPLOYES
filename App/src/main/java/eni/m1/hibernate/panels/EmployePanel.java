/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eni.m1.hibernate.panels;

import eni.m1.hibernate.dao.EmployeDAO;
import eni.m1.hibernate.entities.Employe;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shirleyodon
 */
public class EmployePanel extends javax.swing.JPanel {

    /**
     * Creates new form EmployePanel
     */
    private DefaultTableModel model;
    private final EmployeDAO dao=new EmployeDAO();
    
    public EmployePanel() {
        initComponents();
        initModel();
        fillTableModel(dao.listerEmploye());
    }
    
    private void initModel(){
        model=(DefaultTableModel)employeeTable.getModel();
    }
    
    private void fillTableModel(List<Employe> l){
        if(l!=null){
            model.setRowCount(0);
            for(Employe e: l){
                model.addRow(new Object[]{
                    e.getFormattedCodeEmploye(),e.getNom(),e.getPrenom(),e.getPoste()
                });
            }
            employeeTable.setModel(model);
        }
    }
    
    private void addTableRow(Employe e){
        if(e!=null){
            model.addRow(new Object[]{
                e.getFormattedCodeEmploye(),e.getNom(),e.getPrenom(),e.getPoste()
            });
            employeeTable.setModel(model);
        }
    }
    
    private void editTableRow(int i, String code, String name, String fName, String poste){
        try{
            model.setValueAt(code, i, 0);
            model.setValueAt(name, i, 1);
            model.setValueAt(fName, i, 2);
            model.setValueAt(poste, i, 3);
            employeeTable.setModel(model);
        }catch(Exception ex){
            System.err.println("\nErreur causée par editTableRow() de EmployePanel !\n"+ex);
        }
    }
    
    private void removeTableRow(int i){
        try{
            model.removeRow(i);
            employeeTable.setModel(model);
        }catch(Exception ex){
            System.err.println("\nErreur causée par removeTableRow() de EmployePanel !\n"+ex);
        }
    }
    
    private void eraseFields(){
        codeEmployeeField.setText("");
        nameField.setText("");
        firstNameField.setText("");
        posteField.setText("");
        searchField.setText("");
    }
    
    private boolean isEmpty(JTextField f){
        return f.getText().equals("");
    }
    
    private boolean estValide(String fce){
        if(fce.charAt(0) != 'E') return false;
        try{
            Integer.parseInt(fce.substring(1));
            return true;
        }catch(NumberFormatException ex){
            System.err.println("\nLe code employé saisi est invalide !\n"+ex);
            return false;
        }
    }
    
    private void move(int i){
        try{
            codeEmployeeField.setText(model.getValueAt(i, 0).toString());
            nameField.setText(model.getValueAt(i, 1).toString());
            firstNameField.setText(model.getValueAt(i, 2).toString());
            posteField.setText(model.getValueAt(i, 3).toString());
        }catch(Exception ex){
            System.err.println("\nErreur causée par move() de EmployePanel !\n"+ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        listPanel = new javax.swing.JPanel();
        employeeTableScrollPane = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();
        infoPanel = new javax.swing.JPanel();
        codeEmployeeLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        posteLabel = new javax.swing.JLabel();
        codeEmployeeField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        firstNameField = new javax.swing.JTextField();
        posteField = new javax.swing.JTextField();
        operationPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        encloseInSearchPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        byLabel = new javax.swing.JLabel();
        searchTypeComboBox = new javax.swing.JComboBox<>();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        bodyPanel.setBackground(new java.awt.Color(33, 47, 61));

        listPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste des employés", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        listPanel.setOpaque(false);

        employeeTable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Nom", "Prénom", "Poste"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        employeeTable.setGridColor(java.awt.Color.lightGray);
        employeeTable.setRowHeight(20);
        employeeTable.setShowGrid(true);
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        employeeTableScrollPane.setViewportView(employeeTable);

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeeTableScrollPane)
                .addContainerGap())
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeeTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        infoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Infos sur l'employé", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        infoPanel.setOpaque(false);

        codeEmployeeLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        codeEmployeeLabel.setForeground(new java.awt.Color(236, 240, 241));
        codeEmployeeLabel.setText("Code");

        nameLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(236, 240, 241));
        nameLabel.setText("Nom");

        firstNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        firstNameLabel.setForeground(new java.awt.Color(236, 240, 241));
        firstNameLabel.setText("Prenom");

        posteLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        posteLabel.setForeground(new java.awt.Color(236, 240, 241));
        posteLabel.setText("Poste");

        codeEmployeeField.setEditable(false);
        codeEmployeeField.setBackground(new java.awt.Color(86, 101, 115));
        codeEmployeeField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        codeEmployeeField.setForeground(new java.awt.Color(255, 250, 250));
        codeEmployeeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        nameField.setBackground(new java.awt.Color(86, 101, 115));
        nameField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        nameField.setForeground(new java.awt.Color(255, 250, 250));
        nameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        firstNameField.setBackground(new java.awt.Color(86, 101, 115));
        firstNameField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        firstNameField.setForeground(new java.awt.Color(255, 250, 250));
        firstNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        posteField.setBackground(new java.awt.Color(86, 101, 115));
        posteField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        posteField.setForeground(new java.awt.Color(255, 250, 250));
        posteField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(codeEmployeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codeEmployeeField)
                        .addGap(56, 56, 56))
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameField))
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(firstNameField))
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addComponent(posteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(posteField)))
                .addGap(20, 20, 20))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeEmployeeLabel)
                    .addComponent(codeEmployeeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(posteLabel)
                    .addComponent(posteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        operationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opérations", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        operationPanel.setOpaque(false);

        addButton.setBackground(new java.awt.Color(86, 101, 115));
        addButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 250, 250));
        addButton.setText("Ajouter");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(86, 101, 115));
        editButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 250, 250));
        editButton.setText("Modifier");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(86, 101, 115));
        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 250, 250));
        deleteButton.setText("Supprimer");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new java.awt.Color(86, 101, 115));
        refreshButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 250, 250));
        refreshButton.setText("Actualiser");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operationPanelLayout = new javax.swing.GroupLayout(operationPanel);
        operationPanel.setLayout(operationPanelLayout);
        operationPanelLayout.setHorizontalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        operationPanelLayout.setVerticalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationPanelLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 12, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        encloseInSearchPanel.setOpaque(false);

        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recherche", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        searchPanel.setOpaque(false);

        byLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        byLabel.setForeground(new java.awt.Color(236, 240, 241));
        byLabel.setText("Par");

        searchTypeComboBox.setBackground(new java.awt.Color(86, 101, 115));
        searchTypeComboBox.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        searchTypeComboBox.setForeground(new java.awt.Color(255, 250, 250));
        searchTypeComboBox.setMaximumRowCount(2);
        searchTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Code employé", "Mot-clef" }));
        searchTypeComboBox.setOpaque(false);

        searchField.setBackground(new java.awt.Color(86, 101, 115));
        searchField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        searchField.setForeground(new java.awt.Color(255, 250, 250));
        searchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchField.setPreferredSize(new java.awt.Dimension(163, 26));

        searchButton.setBackground(new java.awt.Color(86, 101, 115));
        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("OK");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(byLabel)
                .addGap(18, 18, 18)
                .addComponent(searchTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(byLabel)
                    .addComponent(searchTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout encloseInSearchPanelLayout = new javax.swing.GroupLayout(encloseInSearchPanel);
        encloseInSearchPanel.setLayout(encloseInSearchPanelLayout);
        encloseInSearchPanelLayout.setHorizontalGroup(
            encloseInSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encloseInSearchPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        encloseInSearchPanelLayout.setVerticalGroup(
            encloseInSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encloseInSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(operationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(encloseInSearchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(operationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(encloseInSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if(isEmpty(nameField) || isEmpty(firstNameField) || isEmpty(posteField))
            JOptionPane.showMessageDialog(null, "Aucun des champs 'Nom' ou 'Prénom' ou 'Poste' ne peut être laissé vide !", "Champs vide(s)", JOptionPane.WARNING_MESSAGE);
        else{
            if(dao.creerEmploye(nameField.getText(), firstNameField.getText(), posteField.getText())){
                String sms="L'employé(e) :\n"+
                                "\tNom = "+nameField.getText()+"\n"+
                                "\tPrénom = "+firstNameField.getText()+"\n"+
                                "\tPoste = "+posteField.getText()+"\n"+
                            "a été ajouté(e) avec succès !";
                JOptionPane.showMessageDialog(null, sms, "Succès de l'ajout", JOptionPane.INFORMATION_MESSAGE);
                addTableRow(dao.obtenirEmploye(nameField.getText(), firstNameField.getText(), posteField.getText()));
                eraseFields();
            }else JOptionPane.showMessageDialog(null, "Echec de l'ajout du nouvel employé !", "Erreur d'ajout", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if(!isEmpty(codeEmployeeField)){
            if(isEmpty(nameField) || isEmpty(firstNameField) || isEmpty(posteField))
                JOptionPane.showMessageDialog(null, "Aucun des champs 'Nom' ou 'Prénom' ou 'Poste' ne peut être laissé vide !", "Champs vide(s)", JOptionPane.WARNING_MESSAGE);
            else{
                if(JOptionPane.showConfirmDialog(null, "Voullez-vous enregistrer les modifications apportés a l'employé(e) dont le code est '"+codeEmployeeField.getText()+"' ?", "Confirmation de mise à jour",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                    if(dao.mettreAjourEmploye(codeEmployeeField.getText(), nameField.getText(), firstNameField.getText(), posteField.getText())){
                        JOptionPane.showMessageDialog(null, "Les modifications ont été enregistrées avec succès !", "Succès de mise à jour", JOptionPane.INFORMATION_MESSAGE);
                        editTableRow(employeeTable.getSelectedRow(), codeEmployeeField.getText(), nameField.getText(), firstNameField.getText(), posteField.getText());
                        eraseFields();
                    }else JOptionPane.showMessageDialog(null, "Echec de l'enregistrement des modifications !", "Erreur de mise à jour", JOptionPane.ERROR_MESSAGE);
                }
            }
        }else JOptionPane.showMessageDialog(null, "Le champ 'Code' est vide !\nVeuillez selectionner un employé dans le tableau", "Champs vide", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if(!isEmpty(codeEmployeeField)){
            if(JOptionPane.showConfirmDialog(null, "Voullez-vous vraiment supprimer l'employé(e) dont le code est = '"+codeEmployeeField.getText()+"' ?", "Confirmation de suppression",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                if(dao.supprimerEmploye(codeEmployeeField.getText())){
                    JOptionPane.showMessageDialog(null, "L'employé(e) a été supprimé(e) avec succès !", "Succès de suppression", JOptionPane.INFORMATION_MESSAGE);
                    removeTableRow(employeeTable.getSelectedRow());
                    eraseFields();
                }else JOptionPane.showMessageDialog(null, "Echec de la suppression de l'employé(e) !", "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
            }
        }else JOptionPane.showMessageDialog(null, "Le champ 'Code' est vide !\nVeuillez selectionner un employé dans le tableau", "Champs vide", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        eraseFields();
        searchTypeComboBox.setSelectedIndex(0);
        fillTableModel(dao.listerEmploye());
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        if(!isEmpty(searchField)){
            String searchType=searchTypeComboBox.getSelectedItem().toString();
            List<Employe> l=new ArrayList();
            
            if(searchType.equals("Code employé")){
                if(estValide(searchField.getText())){
                    l.add(dao.obtenirEmploye(searchField.getText()));
                    if(l.get(0)==null) JOptionPane.showMessageDialog(null, "Aucun(e) employé(e) dont le "+searchType+"= '"+searchField.getText()+"' n'a été trouvé(e) !", "Aucun résultat", JOptionPane.INFORMATION_MESSAGE);
                    else fillTableModel(l); //searchField.setText("");
                }else JOptionPane.showMessageDialog(null, "Le code employé est invalide !", "Champs invalide", JOptionPane.WARNING_MESSAGE);
            }else{
                l=dao.listerEmployeParMotCle(searchField.getText());
                if(l==null) JOptionPane.showMessageDialog(null, "Aucun(e) employé(e) correspondant au "+searchType+"= '"+searchField.getText()+"' n'a été trouvé(e) !", "Aucun résultat", JOptionPane.INFORMATION_MESSAGE);
                else fillTableModel(l); //searchField.setText("");
            }     
        }else JOptionPane.showMessageDialog(null, "Le champs de recherche est vide !", "Champs vide", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        // TODO add your handling code here:
        try{
            move(employeeTable.getSelectedRow());
        }catch(Exception ex){
            System.err.println("\nErreur causée par employeeTableMouseClicked() de EmployePanel !\n"+ex);
        }
    }//GEN-LAST:event_employeeTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JLabel byLabel;
    private javax.swing.JTextField codeEmployeeField;
    private javax.swing.JLabel codeEmployeeLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JTable employeeTable;
    private javax.swing.JScrollPane employeeTableScrollPane;
    private javax.swing.JPanel encloseInSearchPanel;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JPanel listPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel operationPanel;
    private javax.swing.JTextField posteField;
    private javax.swing.JLabel posteLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox<String> searchTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
