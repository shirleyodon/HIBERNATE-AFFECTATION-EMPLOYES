/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eni.m1.hibernate.panels;

import com.toedter.calendar.JDateChooser;
import eni.m1.hibernate.dao.AffectationDAO;
import eni.m1.hibernate.dialog.Chart;
import eni.m1.hibernate.entities.Affectation;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shirleyodon
 */
public class AffectationPanel extends javax.swing.JPanel {

    /**
     * Creates new form AffectationPanel
     */
    private DefaultTableModel model;
    private final AffectationDAO dao=new AffectationDAO();
    private final SimpleDateFormat format=new SimpleDateFormat("dd-MM-yyyy");
    
    public AffectationPanel() {
        initComponents();
        initTableModel();
        fillTableModel(dao.listerAffectation());
    }
    
    private void initTableModel(){
        model=(DefaultTableModel)affectationTable.getModel();
    }
    
    private void fillTableModel(List<Object> l){
        if(l!=null){
            model.setRowCount(0);
            for(Object a: l){
                model.addRow(new Object[]{
                    ((Affectation)a).getEmploye().getFormattedCodeEmploye(),
                    ((Affectation)a).getLieu().getFormattedCodeLieu(),
                    ((Affectation)a).getFormattedDateAffectation()
                });
            }
            affectationTable.setModel(model);
        }
    }
    
    private void addTableRow(String formattedCodeEmploye, String formattedCodeLieu, Date date){
        model.addRow(new Object[]{
            formattedCodeEmploye, formattedCodeLieu, format.format(date)
        });
        affectationTable.setModel(model);
    }
    
    private void editTableRow(int i, String formattedCodeEmploye, String formattedCodeLieu, Date date){
        try{
            model.setValueAt(formattedCodeEmploye, i, 0);
            model.setValueAt(formattedCodeLieu, i, 1);
            model.setValueAt(format.format(date), i, 2);
            affectationTable.setModel(model);
        }catch(Exception ex){
            System.err.println("\nErreur causée par editTableRow() de AffectationPanel !\n"+ex);
        }
    }
    
    private void removeTableRow(int i){
        try{
            model.removeRow(i);
            affectationTable.setModel(model);
        }catch(Exception ex){
            System.err.println("\nErreur causée par removeTableRow() de AffectationPanel !\n"+ex);
        }
    }
    
    private void eraseField(){
        codeEmployeFormattedField.setValue(null);
        codeEmployeSearchField.setValue(null);
        codeLieuFormattedField.setValue(null);
        codeLieuSearchField.setValue(null);
        dateChooser.setDate(new Date());
    }
    
    private boolean estValide(JFormattedTextField formattedField){
        return formattedField.isEditValid();
    }
    
    private boolean estValide(JDateChooser d){
        return (d.getDate()!=null);
    }
    
    private void move(int i){
        try{
            codeEmployeFormattedField.setText(model.getValueAt(i, 0).toString());
            codeLieuFormattedField.setText(model.getValueAt(i, 1).toString());
            dateChooser.setDate(format.parse(model.getValueAt(i, 2).toString()));
        }catch(Exception ex){
            System.err.println("\nErreur causée par move() de AffectationPanel !\n"+ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        listPanel = new javax.swing.JPanel();
        affectationTableScroll = new javax.swing.JScrollPane();
        affectationTable = new javax.swing.JTable();
        infoPanel = new javax.swing.JPanel();
        codeEmployeLabel = new javax.swing.JLabel();
        codeLieuLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        codeEmployeFormattedField = new javax.swing.JFormattedTextField();
        codeLieuFormattedField = new javax.swing.JFormattedTextField();
        dateChooser = new com.toedter.calendar.JDateChooser();
        operationPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        chartLabel = new javax.swing.JLabel();
        encloseInSearchPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        byLabel = new javax.swing.JLabel();
        searchTypeComboBox = new javax.swing.JComboBox<>();
        codeEmployeSearchField = new javax.swing.JFormattedTextField();
        codeLieuSearchField = new javax.swing.JFormattedTextField();
        searchButton = new javax.swing.JButton();

        bodyPanel.setBackground(new java.awt.Color(33, 47, 61));

        listPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste des affectations", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        listPanel.setOpaque(false);
        listPanel.setPreferredSize(new java.awt.Dimension(484, 297));

        affectationTable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        affectationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code employé", "Code lieu", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        affectationTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        affectationTable.setRowHeight(20);
        affectationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                affectationTableMouseClicked(evt);
            }
        });
        affectationTableScroll.setViewportView(affectationTable);

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(affectationTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(affectationTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        infoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Info sur l'affectation", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        infoPanel.setOpaque(false);

        codeEmployeLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        codeEmployeLabel.setForeground(new java.awt.Color(236, 240, 241));
        codeEmployeLabel.setText("Code employé");

        codeLieuLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        codeLieuLabel.setForeground(new java.awt.Color(236, 240, 241));
        codeLieuLabel.setText("Code lieu");

        dateLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(236, 240, 241));
        dateLabel.setText("Date");

        codeEmployeFormattedField.setBackground(new java.awt.Color(86, 101, 115));
        codeEmployeFormattedField.setForeground(new java.awt.Color(255, 250, 250));
        try {
            codeEmployeFormattedField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("E###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        codeEmployeFormattedField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codeEmployeFormattedField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N

        codeLieuFormattedField.setBackground(new java.awt.Color(86, 101, 115));
        codeLieuFormattedField.setForeground(new java.awt.Color(255, 250, 250));
        try {
            codeLieuFormattedField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("'L###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        codeLieuFormattedField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codeLieuFormattedField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N

        dateChooser.setDateFormatString("d MMM yyyy");
        dateChooser.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        dateChooser.setPreferredSize(new java.awt.Dimension(148, 26));

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(codeLieuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(codeEmployeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addGroup(infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(codeLieuFormattedField)
                            .addComponent(codeEmployeFormattedField))
                        .addGap(75, 75, 75)))
                .addContainerGap())
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeEmployeLabel)
                    .addComponent(codeEmployeFormattedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeLieuLabel)
                    .addComponent(codeLieuFormattedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateLabel)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        operationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opérations", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        operationPanel.setOpaque(false);

        addButton.setBackground(new java.awt.Color(86, 101, 115));
        addButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 250, 250));
        addButton.setText("Ajouter");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(86, 101, 115));
        editButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 250, 250));
        editButton.setText("Modifier");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(86, 101, 115));
        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 250, 250));
        deleteButton.setText("Supprimer");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new java.awt.Color(86, 101, 115));
        refreshButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 250, 250));
        refreshButton.setText("Actualiser");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operationPanelLayout = new javax.swing.GroupLayout(operationPanel);
        operationPanel.setLayout(operationPanelLayout);
        operationPanelLayout.setHorizontalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationPanelLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 18, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        operationPanelLayout.setVerticalGroup(
            operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(operationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chartLabel.setBackground(new java.awt.Color(245, 103, 27));
        chartLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        chartLabel.setForeground(new java.awt.Color(255, 255, 255));
        chartLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chartLabel.setText("Graphe de repartition");
        chartLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chartLabel.setOpaque(true);
        chartLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                chartLabelMouseMoved(evt);
            }
        });
        chartLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chartLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chartLabelMouseExited(evt);
            }
        });

        encloseInSearchPanel.setOpaque(false);

        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recherche", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Trebuchet MS", 1, 22), new java.awt.Color(236, 240, 241))); // NOI18N
        searchPanel.setOpaque(false);

        byLabel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        byLabel.setForeground(new java.awt.Color(236, 240, 241));
        byLabel.setText("Par");

        searchTypeComboBox.setBackground(new java.awt.Color(86, 101, 115));
        searchTypeComboBox.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        searchTypeComboBox.setForeground(new java.awt.Color(255, 250, 250));
        searchTypeComboBox.setMaximumRowCount(3);
        searchTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Code employé & Code lieu", "Code employé", "Code lieu" }));
        searchTypeComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTypeComboBoxMouseClicked(evt);
            }
        });
        searchTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeComboBoxActionPerformed(evt);
            }
        });

        codeEmployeSearchField.setBackground(new java.awt.Color(86, 101, 115));
        codeEmployeSearchField.setForeground(new java.awt.Color(255, 250, 250));
        try {
            codeEmployeSearchField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("E###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        codeEmployeSearchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codeEmployeSearchField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        codeEmployeSearchField.setPreferredSize(new java.awt.Dimension(69, 26));

        codeLieuSearchField.setBackground(new java.awt.Color(86, 101, 115));
        codeLieuSearchField.setForeground(new java.awt.Color(255, 250, 250));
        try {
            codeLieuSearchField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("'L###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        codeLieuSearchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codeLieuSearchField.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        codeLieuSearchField.setPreferredSize(new java.awt.Dimension(69, 26));

        searchButton.setBackground(new java.awt.Color(86, 101, 115));
        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("OK");
        searchButton.setPreferredSize(new java.awt.Dimension(57, 26));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(codeEmployeSearchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(codeLieuSearchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(byLabel)
                        .addGap(18, 18, 18)
                        .addComponent(searchTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(byLabel)
                    .addComponent(searchTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codeEmployeSearchField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeLieuSearchField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout encloseInSearchPanelLayout = new javax.swing.GroupLayout(encloseInSearchPanel);
        encloseInSearchPanel.setLayout(encloseInSearchPanelLayout);
        encloseInSearchPanelLayout.setHorizontalGroup(
            encloseInSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, encloseInSearchPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );
        encloseInSearchPanelLayout.setVerticalGroup(
            encloseInSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encloseInSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(chartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(operationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                    .addComponent(encloseInSearchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanelLayout.createSequentialGroup()
                        .addComponent(encloseInSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(operationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(chartLabel)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String searchType=searchTypeComboBox.getSelectedItem().toString();
        List l;
        if(searchType.equals("Code employé")){
            if(estValide(codeEmployeSearchField)){
                l=dao.listerAffectationParEmploye(codeEmployeSearchField.getText());
                if(l.get(0)!=null) { fillTableModel(l); codeEmployeSearchField.setValue(null);}
                else JOptionPane.showMessageDialog(null, l.get(1), "Aucun resultat", JOptionPane.INFORMATION_MESSAGE);
            }else JOptionPane.showMessageDialog(null, "Le code employé est invalide !", "Champs invalide", JOptionPane.WARNING_MESSAGE);
        }else if(searchType.equals("Code lieu")){
            if(estValide(codeLieuSearchField)){
                l=dao.listerAffectationParLieu(codeLieuSearchField.getText());
                if(l.get(0)!=null) {fillTableModel(l); codeLieuSearchField.setValue(null);}
                else JOptionPane.showMessageDialog(null, l.get(1), "Aucun resultat", JOptionPane.INFORMATION_MESSAGE);
            }else JOptionPane.showMessageDialog(null, "Le code lieu est invalide !", "Champs invalide", JOptionPane.WARNING_MESSAGE);
        }else{
            if(estValide(codeEmployeSearchField) && estValide(codeLieuSearchField)){
                l=dao.obtenirAffectation(codeEmployeSearchField.getText(), codeLieuSearchField.getText());
                if(l.get(0)!=null) {fillTableModel(l); codeEmployeSearchField.setValue(null); codeLieuSearchField.setValue(null);}
                else JOptionPane.showMessageDialog(null, l.get(1), "Aucun resultat", JOptionPane.INFORMATION_MESSAGE);
            }else if (!estValide(codeEmployeSearchField))
                JOptionPane.showMessageDialog(null, "Le code employé est invalide !", "Champs invalide", JOptionPane.WARNING_MESSAGE);
            else JOptionPane.showMessageDialog(null, "Le code lieu est invalide !", "Champs invalide", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void affectationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_affectationTableMouseClicked
        // TODO add your handling code here:
        try{
            move(affectationTable.getSelectedRow());
        }catch(Exception ex){
            System.err.println("\nErreur causée par affectationTableMouseClicked() de AffectationPanel !\n"+ex);
        }
    }//GEN-LAST:event_affectationTableMouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if(estValide(codeEmployeFormattedField) && estValide(codeLieuFormattedField) && estValide(dateChooser)){
            List l=dao.creerAffectation(codeEmployeFormattedField.getText(), codeLieuFormattedField.getText(), dateChooser.getDate());
            if(l.get(0).equals(true)){
                try{
                    String sms="L'affectation :\n"+
                                    "\tCode employé = "+codeEmployeFormattedField.getText()+"\n"+
                                    "\tCode lieu = "+codeLieuFormattedField.getText()+"\n"+
                                    "\tDate = "+format.format(dateChooser.getDate())+"\n"+
                                "a été ajoutée avec succès !";
                    JOptionPane.showMessageDialog(null, sms, "Succès de l'ajout", JOptionPane.INFORMATION_MESSAGE);
                    addTableRow(codeEmployeFormattedField.getText(), codeLieuFormattedField.getText(), dateChooser.getDate());
                    eraseField();
                }catch(Exception ex){
                    System.err.println("\nErreur causée par addButtonActionPerformed() de AffectationPanel !\n"+ex);
                }
            }else JOptionPane.showMessageDialog(null, l.get(1).toString(), "Erreur d'ajout", JOptionPane.ERROR_MESSAGE);
        }else JOptionPane.showMessageDialog(null, "Au moins un des champs 'Code employé' ou 'Code lieu' ou 'Date' est invalide", "Champs invalides", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_addButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if(estValide(codeEmployeFormattedField) && estValide(codeLieuFormattedField) && estValide(dateChooser)){
            try{
                int i=affectationTable.getSelectedRow();
                String cfce=model.getValueAt(i, 0).toString(),
                       cfcl=model.getValueAt(i, 1).toString(),
                       cd=model.getValueAt(i, 2).toString(),
                       ca="Code employé = "+cfce+", Code lieu = "+cfcl+", Date = "+cd;
                
                if(JOptionPane.showConfirmDialog(null, "Voullez-vous enregistrer les modifications apportées à l'entrée :\n"+ca+" ?",
                    "Confirmation de mise à jour", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION){
                    List l=dao.modifierAffectation(cfce, cfcl, codeEmployeFormattedField.getText(), codeLieuFormattedField.getText(), dateChooser.getDate());
                    if(l.get(0).equals(true)){
                        JOptionPane.showMessageDialog(null, l.get(1).toString(), "Succès de la mise à jour", JOptionPane.INFORMATION_MESSAGE);
                        editTableRow(i, codeEmployeFormattedField.getText(), codeLieuFormattedField.getText(), dateChooser.getDate());
                        eraseField();
                    }else JOptionPane.showMessageDialog(null, l.get(1).toString(), "Erreur de mise à jour", JOptionPane.ERROR_MESSAGE);
                }
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Aucune entrée du tableau n'a été selectionnée !", "Erreur de mise à jour", JOptionPane.ERROR_MESSAGE);
            }
        }else JOptionPane.showMessageDialog(null, "Au moins un des champs 'Code employé' ou 'Code lieu' ou 'Date' est invalide", "Champs invalides", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if(estValide(codeEmployeFormattedField) && estValide(codeLieuFormattedField)){
            if(JOptionPane.showConfirmDialog(null, "Voullez-vous vraiment supprimer l'affectation dont l'ID = '"
                +codeEmployeFormattedField.getText()+"-"+codeLieuFormattedField.getText()+"' ?", 
                "Confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                
                List l=dao.supprimerAffectation(codeEmployeFormattedField.getText(), codeLieuFormattedField.getText());
                if(l.get(0).equals(true)){
                    JOptionPane.showMessageDialog(null, l.get(1).toString(), "Succès de la suppression", JOptionPane.INFORMATION_MESSAGE);
                    if(affectationTable.getSelectedRow()!=-1) removeTableRow(affectationTable.getSelectedRow());
                    else fillTableModel(dao.listerAffectation());
                    eraseField();
                }else JOptionPane.showMessageDialog(null, l.get(1).toString(), "Erreur de suppression", JOptionPane.ERROR_MESSAGE);
            }
        }else JOptionPane.showMessageDialog(null, "Au moins un des champs 'Code employé' ou 'Code lieu' est invalide", "Champs invalides", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        fillTableModel(dao.listerAffectation());
        eraseField();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void searchTypeComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTypeComboBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTypeComboBoxMouseClicked

    private void searchTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeComboBoxActionPerformed
        // TODO add your handling code here:
        String searchType=searchTypeComboBox.getSelectedItem().toString();
        if(searchType.equals("Code employé")){
            codeEmployeSearchField.setEnabled(true);
            codeLieuSearchField.setEnabled(false);
            codeLieuSearchField.setValue(null);
        }else if(searchType.equals("Code lieu")){
            codeEmployeSearchField.setEnabled(false);
            codeEmployeSearchField.setValue(null);
            codeLieuSearchField.setEnabled(true);
        }else{
            codeEmployeSearchField.setEnabled(true);
            codeLieuSearchField.setEnabled(true);
        }
    }//GEN-LAST:event_searchTypeComboBoxActionPerformed

    private void chartLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chartLabelMouseClicked
        // TODO add your handling code here:
        Chart dialog = new Chart(null, true, dao.listerAffectation());
        dialog.setVisible(true);
    }//GEN-LAST:event_chartLabelMouseClicked

    private void chartLabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chartLabelMouseMoved
        // TODO add your handling code here:
        chartLabel.setBackground(new Color(248, 148, 6));
    }//GEN-LAST:event_chartLabelMouseMoved

    private void chartLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chartLabelMouseExited
        // TODO add your handling code here:
        chartLabel.setBackground(new Color(245, 103, 27));
    }//GEN-LAST:event_chartLabelMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTable affectationTable;
    private javax.swing.JScrollPane affectationTableScroll;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JLabel byLabel;
    private javax.swing.JLabel chartLabel;
    private javax.swing.JFormattedTextField codeEmployeFormattedField;
    private javax.swing.JLabel codeEmployeLabel;
    private javax.swing.JFormattedTextField codeEmployeSearchField;
    private javax.swing.JFormattedTextField codeLieuFormattedField;
    private javax.swing.JLabel codeLieuLabel;
    private javax.swing.JFormattedTextField codeLieuSearchField;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel encloseInSearchPanel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JPanel listPanel;
    private javax.swing.JPanel operationPanel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JComboBox<String> searchTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
